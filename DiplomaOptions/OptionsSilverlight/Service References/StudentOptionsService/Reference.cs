//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 4.0.50826.0
// 
namespace OptionsSilverlight.StudentOptionsService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StudentOptionsService.IStudentOptionsService")]
    public interface IStudentOptionsService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudentOptionsService/getActiveOptions", ReplyAction="http://tempuri.org/IStudentOptionsService/getActiveOptionsResponse")]
        System.IAsyncResult BegingetActiveOptions(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndgetActiveOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IStudentOptionsService/boolsubmitOptions", ReplyAction="http://tempuri.org/IStudentOptionsService/boolsubmitOptionsResponse")]
        System.IAsyncResult BeginboolsubmitOptions(string studentNumber, string firstName, string lastName, string firstOption, string secondOption, string thirdOption, string fourthOption, System.AsyncCallback callback, object asyncState);
        
        bool EndboolsubmitOptions(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStudentOptionsServiceChannel : OptionsSilverlight.StudentOptionsService.IStudentOptionsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class getActiveOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public getActiveOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class boolsubmitOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public boolsubmitOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StudentOptionsServiceClient : System.ServiceModel.ClientBase<OptionsSilverlight.StudentOptionsService.IStudentOptionsService>, OptionsSilverlight.StudentOptionsService.IStudentOptionsService {
        
        private BeginOperationDelegate onBegingetActiveOptionsDelegate;
        
        private EndOperationDelegate onEndgetActiveOptionsDelegate;
        
        private System.Threading.SendOrPostCallback ongetActiveOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginboolsubmitOptionsDelegate;
        
        private EndOperationDelegate onEndboolsubmitOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onboolsubmitOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public StudentOptionsServiceClient() {
        }
        
        public StudentOptionsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StudentOptionsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentOptionsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StudentOptionsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<getActiveOptionsCompletedEventArgs> getActiveOptionsCompleted;
        
        public event System.EventHandler<boolsubmitOptionsCompletedEventArgs> boolsubmitOptionsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OptionsSilverlight.StudentOptionsService.IStudentOptionsService.BegingetActiveOptions(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BegingetActiveOptions(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> OptionsSilverlight.StudentOptionsService.IStudentOptionsService.EndgetActiveOptions(System.IAsyncResult result) {
            return base.Channel.EndgetActiveOptions(result);
        }
        
        private System.IAsyncResult OnBegingetActiveOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((OptionsSilverlight.StudentOptionsService.IStudentOptionsService)(this)).BegingetActiveOptions(callback, asyncState);
        }
        
        private object[] OnEndgetActiveOptions(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((OptionsSilverlight.StudentOptionsService.IStudentOptionsService)(this)).EndgetActiveOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OngetActiveOptionsCompleted(object state) {
            if ((this.getActiveOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.getActiveOptionsCompleted(this, new getActiveOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void getActiveOptionsAsync() {
            this.getActiveOptionsAsync(null);
        }
        
        public void getActiveOptionsAsync(object userState) {
            if ((this.onBegingetActiveOptionsDelegate == null)) {
                this.onBegingetActiveOptionsDelegate = new BeginOperationDelegate(this.OnBegingetActiveOptions);
            }
            if ((this.onEndgetActiveOptionsDelegate == null)) {
                this.onEndgetActiveOptionsDelegate = new EndOperationDelegate(this.OnEndgetActiveOptions);
            }
            if ((this.ongetActiveOptionsCompletedDelegate == null)) {
                this.ongetActiveOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OngetActiveOptionsCompleted);
            }
            base.InvokeAsync(this.onBegingetActiveOptionsDelegate, null, this.onEndgetActiveOptionsDelegate, this.ongetActiveOptionsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult OptionsSilverlight.StudentOptionsService.IStudentOptionsService.BeginboolsubmitOptions(string studentNumber, string firstName, string lastName, string firstOption, string secondOption, string thirdOption, string fourthOption, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginboolsubmitOptions(studentNumber, firstName, lastName, firstOption, secondOption, thirdOption, fourthOption, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool OptionsSilverlight.StudentOptionsService.IStudentOptionsService.EndboolsubmitOptions(System.IAsyncResult result) {
            return base.Channel.EndboolsubmitOptions(result);
        }
        
        private System.IAsyncResult OnBeginboolsubmitOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string studentNumber = ((string)(inValues[0]));
            string firstName = ((string)(inValues[1]));
            string lastName = ((string)(inValues[2]));
            string firstOption = ((string)(inValues[3]));
            string secondOption = ((string)(inValues[4]));
            string thirdOption = ((string)(inValues[5]));
            string fourthOption = ((string)(inValues[6]));
            return ((OptionsSilverlight.StudentOptionsService.IStudentOptionsService)(this)).BeginboolsubmitOptions(studentNumber, firstName, lastName, firstOption, secondOption, thirdOption, fourthOption, callback, asyncState);
        }
        
        private object[] OnEndboolsubmitOptions(System.IAsyncResult result) {
            bool retVal = ((OptionsSilverlight.StudentOptionsService.IStudentOptionsService)(this)).EndboolsubmitOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnboolsubmitOptionsCompleted(object state) {
            if ((this.boolsubmitOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.boolsubmitOptionsCompleted(this, new boolsubmitOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void boolsubmitOptionsAsync(string studentNumber, string firstName, string lastName, string firstOption, string secondOption, string thirdOption, string fourthOption) {
            this.boolsubmitOptionsAsync(studentNumber, firstName, lastName, firstOption, secondOption, thirdOption, fourthOption, null);
        }
        
        public void boolsubmitOptionsAsync(string studentNumber, string firstName, string lastName, string firstOption, string secondOption, string thirdOption, string fourthOption, object userState) {
            if ((this.onBeginboolsubmitOptionsDelegate == null)) {
                this.onBeginboolsubmitOptionsDelegate = new BeginOperationDelegate(this.OnBeginboolsubmitOptions);
            }
            if ((this.onEndboolsubmitOptionsDelegate == null)) {
                this.onEndboolsubmitOptionsDelegate = new EndOperationDelegate(this.OnEndboolsubmitOptions);
            }
            if ((this.onboolsubmitOptionsCompletedDelegate == null)) {
                this.onboolsubmitOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnboolsubmitOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginboolsubmitOptionsDelegate, new object[] {
                        studentNumber,
                        firstName,
                        lastName,
                        firstOption,
                        secondOption,
                        thirdOption,
                        fourthOption}, this.onEndboolsubmitOptionsDelegate, this.onboolsubmitOptionsCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override OptionsSilverlight.StudentOptionsService.IStudentOptionsService CreateChannel() {
            return new StudentOptionsServiceClientChannel(this);
        }
        
        private class StudentOptionsServiceClientChannel : ChannelBase<OptionsSilverlight.StudentOptionsService.IStudentOptionsService>, OptionsSilverlight.StudentOptionsService.IStudentOptionsService {
            
            public StudentOptionsServiceClientChannel(System.ServiceModel.ClientBase<OptionsSilverlight.StudentOptionsService.IStudentOptionsService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BegingetActiveOptions(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("getActiveOptions", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndgetActiveOptions(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("getActiveOptions", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginboolsubmitOptions(string studentNumber, string firstName, string lastName, string firstOption, string secondOption, string thirdOption, string fourthOption, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[7];
                _args[0] = studentNumber;
                _args[1] = firstName;
                _args[2] = lastName;
                _args[3] = firstOption;
                _args[4] = secondOption;
                _args[5] = thirdOption;
                _args[6] = fourthOption;
                System.IAsyncResult _result = base.BeginInvoke("boolsubmitOptions", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndboolsubmitOptions(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("boolsubmitOptions", _args, result)));
                return _result;
            }
        }
    }
}
